{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","Confirm","List","primaryText","secondaryText","Success","UserForm","state","step","occupaation","setState","input","target","value","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40d84382.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class FormUserDetails extends Component {\r\n    continue = e =>{    \r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n    render() {\r\n        const {values, handleChange} = this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Enter User Details\"/>\r\n                    <TextField\r\n                        hintText=\"Enter First Name\"\r\n                        floatingLabelText=\"First Name\"\r\n                        onChange={handleChange('firstName')}\r\n                        defaultValue={values.firstName}\r\n                   />\r\n                   <br/> \r\n                   <TextField\r\n                        hintText=\"Enter Last Name\"\r\n                        floatingLabelText=\"Last Name\"\r\n                        onChange={handleChange('lastName')}\r\n                        defaultValue={values.lastName}\r\n                   />\r\n                    <br/> \r\n                   <TextField\r\n                        hintText=\"Enter Email\"\r\n                        floatingLabelText=\"Email\"\r\n                        onChange={handleChange('email')}\r\n                        defaultValue={values.email}\r\n                   />\r\n                   <br/>\r\n                   <RaisedButton\r\n                    label=\"Continue\"\r\n                    primary={true}\r\n                    style= {styles.button}\r\n                    onClick ={this.continue}\r\n                   />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles ={\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default FormUserDetails\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class FormPersonalDetails extends Component {\r\n    continue = e =>{    \r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n    back = e =>{    \r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange} = this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Enter Personal Details\"/>\r\n                    <TextField\r\n                        hintText=\"Enter Occupation\"\r\n                        floatingLabelText=\"Occupation\"\r\n                        onChange={handleChange('occupation')}\r\n                        defaultValue={values.occupation}\r\n                   />\r\n                   <br/> \r\n                   <TextField\r\n                        hintText=\"Enter City\"\r\n                        floatingLabelText=\"City\"\r\n                        onChange={handleChange('city')}\r\n                        defaultValue={values.city}\r\n                   />\r\n                    <br/> \r\n                   <TextField\r\n                        hintText=\"Enter Bio\"\r\n                        floatingLabelText=\"Bio\"\r\n                        onChange={handleChange('bio')}\r\n                        defaultValue={values.bio}\r\n                   />\r\n                   <br/>\r\n                   <RaisedButton\r\n                    label=\"Previous\"\r\n                    primary={false} /* changes color of button */\r\n                    style= {styles.button}\r\n                    onClick ={this.back}\r\n                   />\r\n                   <RaisedButton\r\n                    label=\"Continue\"\r\n                    primary={true}\r\n                    style= {styles.button}\r\n                    onClick ={this.continue}\r\n                   />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles ={\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default FormPersonalDetails\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport {List, ListItem} from 'material-ui/List';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class Confirm extends Component {\r\n    continue = e =>{    \r\n        e.preventDefault();\r\n        //PROCESS FORM e.g. send data to backend\r\n        this.props.nextStep();\r\n    }\r\n    back = e =>{    \r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values:{firstName, lastName, email, \r\n            occupation, city, bio}} = this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Confirm User Data\"/>\r\n                    <List>\r\n                        <ListItem\r\n                        primaryText=\"First Name\"\r\n                        secondaryText={firstName}\r\n                        />\r\n                        <ListItem\r\n                        primaryText=\"Last Name\"\r\n                        secondaryText={lastName}\r\n                        />\r\n                        <ListItem\r\n                        primaryText=\"Email\"\r\n                        secondaryText={email}\r\n                        />\r\n                        <ListItem\r\n                        primaryText=\"Occupation\"\r\n                        secondaryText={occupation}\r\n                        />\r\n                        <ListItem\r\n                        primaryText=\"City\"\r\n                        secondaryText={city}\r\n                        />\r\n                        <ListItem\r\n                        primaryText=\"Bio\"\r\n                        secondaryText={bio}\r\n                        />\r\n                    </List>\r\n\r\n                   <RaisedButton\r\n                    label=\"Previous\"\r\n                    primary={false} /* changes color of button */\r\n                    style= {styles.button}\r\n                    onClick ={this.back}\r\n                   />\r\n                   <RaisedButton\r\n                    label=\"Continue\"\r\n                    primary={true}\r\n                    style= {styles.button}\r\n                    onClick ={this.continue}\r\n                   />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles ={\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default Confirm\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\n\r\nexport class Success extends Component {\r\n    continue = e =>{    \r\n        e.preventDefault();\r\n        //PROCESS FORM e.g. send data to backend\r\n        this.props.nextStep();\r\n    }\r\n    back = e =>{    \r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        // const {values:{firstName, lastName, email, \r\n        //     occupation, city, bio}} = this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Success\"/>\r\n                    <h1>Thank You For Your Submission on Elaine's app hehe</h1>\r\n                    <p>You will get a telegram with further instructions</p>\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Success\r\n","import React, { Component } from 'react';\r\nimport FormUserDetails from './FormUserDetails';\r\nimport FormPersonalDetails from './FormPersonalDetails';\r\nimport Confirm from './Confirm';\r\nimport Success from './Success';\r\n\r\n\r\nexport class UserForm extends Component {\r\n    state ={ /* object declaration */\r\n        step:1,\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        occupaation:'',\r\n        city:'',\r\n        bio:''\r\n    }\r\n    /* proceed to next step */\r\n    nextStep = () =>{\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step+1\r\n        });\r\n    }\r\n\r\n    /* proceed to prev step */\r\n    prevStep = () =>{\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step-1\r\n        });\r\n    }\r\n\r\n    /* handle change in fields */\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const{firstName, lastName, email, occupation, city, bio} = this.state;\r\n        const values = {firstName, lastName, email, occupation, city, bio}\r\n        \r\n        switch(step){\r\n            case 1:\r\n                return(\r\n                    <FormUserDetails\r\n                    nextStep = {this.nextStep}\r\n                    handleChange = {this.handleChange}\r\n                    values = {values}\r\n                    />\r\n                )\r\n            case 2:\r\n                return(\r\n                    <FormPersonalDetails\r\n                    nextStep = {this.nextStep}\r\n                    prevStep = {this.prevStep}\r\n                    handleChange = {this.handleChange}\r\n                    values = {values}\r\n                    />\r\n                )\r\n            case 3:\r\n                return(\r\n                    <Confirm\r\n                    nextStep = {this.nextStep}\r\n                    prevStep = {this.prevStep}\r\n                    // handleChange = {this.handleChange}\r\n                    values = {values}\r\n                    />\r\n                    // <h1>Confirm</h1>\r\n                )\r\n            case 4:\r\n                return(\r\n                    <Success/>\r\n                )\r\n        }\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserForm\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport UserForm from './components/UserForm';\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <UserForm/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}